{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Build sanecppTest Debug",
            "type": "shell",
            // Building scheme for DEBUG (will use settings set in the scheme, ASAN for example)
            // Building only a single arch because, USE_ACTIVE_ARCS is ignored when invoked from xcodebuild
            "command": "xcodebuild -scheme sanecppTest -configuration Debug -project ${workspaceFolder}/sanecpp.xcodeproj",
            "problemMatcher": [
                "$gcc"
            ],
            "presentation": {
                "echo": true,
                "reveal": "never",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "Build sanecppTest Release",
            "type": "shell",
            // We cannot use target because it creates a "build" directory ignoring our build product dir customization (BUG)
            // We cannot use "archive" action as produces a broken symlink instead of proper executable (BUG)
            // We cannot use the regular scheme as it will probably have ASAN and UBSAN enabled and xcodebuild ignores -enableAddressSanitizer=NO -enableUndefinedBehaviorSanitizer=NO (BUG)
            // So we had to dedicate a specific scheme for the release called sanecppTestRelease
            // If you want to build only 1 arch add ONLY_ACTIVE_ARCH=YES (or use ARCHS=arm64 or ARCHS=x86_64)
            "command": "xcodebuild -scheme sanecppTestRelease -configuration Release -project ${workspaceFolder}/sanecpp.xcodeproj",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Build sanecppTest Release ACTIVE ARCH",
            "type": "shell",
            "command": "xcodebuild -scheme sanecppTestRelease -configuration Release -project ${workspaceFolder}/sanecpp.xcodeproj ONLY_ACTIVE_ARCH=YES",
            "problemMatcher": [
                "$gcc"
            ]
        },
        {
            "label": "Clang-Format Everything",
            "type": "shell",
            "command": "${workspaceFolder}/clang_format.sh",
            "problemMatcher": []
        },
        {
            "label": "Refresh compile_commands_arm64.json macOS-Universal Debug",
            "type": "shell",
            "command": "xcrun xcodebuild -scheme sanecppTest -configuration Debug -project ${workspaceFolder}/sanecpp.xcodeproj ARCHS=arm64 USE_ACTIVE_ARCS=NO OTHER_CFLAGS=\"\\$(inherited) -gen-cdb-fragment-path \\$(PROJECT_DIR)/_build/macOS-Universal/Debug/CompilationDatabase\" && sed -e '1s/^/[\\'$'\n''/' -e '$s/,$/\\'$'\n'']/' ${workspaceFolder}/_build/macOS-Universal/Debug/CompilationDatabase/*.json > ${workspaceFolder}/_build/macOS-Universal/Debug/compile_commands_arm64.json && rm ${workspaceFolder}/_build/macOS-Universal/Debug/CompilationDatabase/*.json && rmdir ${workspaceFolder}/_build/macOS-Universal/Debug/CompilationDatabase",
            "problemMatcher": []
        },
        {
            "label": "Refresh compile_commands_arm64.json macOS-Universal Release",
            "type": "shell",
            "command": "xcrun xcodebuild -scheme sanecppTest -configuration Release -project ${workspaceFolder}/sanecpp.xcodeproj ARCHS=arm64 USE_ACTIVE_ARCS=NO OTHER_CFLAGS=\"\\$(inherited) -gen-cdb-fragment-path \\$(PROJECT_DIR)/_build/macOS-Universal/Release/CompilationDatabase\" && sed -e '1s/^/[\\'$'\n''/' -e '$s/,$/\\'$'\n'']/' ${workspaceFolder}/_build/macOS-Universal/Release/CompilationDatabase/*.json > ${workspaceFolder}/_build/macOS-Universal/Release/compile_commands_arm64.json && rm ${workspaceFolder}/_build/macOS-Universal/Release/CompilationDatabase/*.json && rmdir ${workspaceFolder}/_build/macOS-Universal/Release/CompilationDatabase",
            "problemMatcher": []
        }
    ]
}